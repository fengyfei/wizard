@startuml

class v2Puller {
	+ V2MetadataService metadata.V2MetadataService
	+ endpoint          registry.APIEndpoint
	+ repoInfo          *registry.RepositoryInfo
	+ repo              distribution.Repository
	+ confirmedV2 bool
}

note left of v2Puller: implements Puller

class ImagePullConfig {
	+ Schema2Types []string
	+ OS string
}

class Config {
	+ MetaHeaders map[string][]string
	+ AuthConfig *types.AuthConfig
	+ ProgressOutput progress.Output
	+ ImageEventLogger func(id, name, action string)
	+ ImageStore ImageConfigStore
	+ RequireSchema2 bool
}

class LayerDownloadManager {
	+ layerStores  map[string]layer.Store
	+ tm           TransferManager
	+ waitDuration time.Duration
}

v2Puller -right-> ImagePullConfig: config
ImagePullConfig -down-> Config: Config
ImagePullConfig -right-> LayerDownloadManager: DownloadManager
note top of LayerDownloadManager: implements RootFSDownloadManager

class DefaultService {
	+ config *serviceConfig
	+ mu     sync.Mutex
}

class metadata.FSMetadataStore {
	+ sync.RWMutex
	+ basePath string
}

class reference.store {
	+ mu sync.RWMutex
	+ jsonPath string
	+ Repositories map[string]repository
	+ referencesByIDCache map[digest.Digest]map[string]reference.Named
}

class imageConfigStore {
	+ image.Store
}

class image.store {
	+ sync.RWMutex
	+ lss       map[string]LayerGetReleaser
	+ images    map[ID]*imageMeta
	+ digestSet *digestset.Set
}

class image.fs {
	+ sync.RWMutex
	+ root string
}

class layer.layerStore {
	+ store       MetadataStore
	+ driver      graphdriver.Driver
	+ useTarSplit bool

	+ layerMap map[ChainID]*roLayer
	+ layerL   sync.Mutex

	+ mounts map[string]*mountedLayer
	+ mountL sync.Mutex
	+ os     string
}

Config -down-> DefaultService: RegistryService
Config -down-> metadata.FSMetadataStore: MetadataStore
Config -down-> reference.store: ReferenceStore
Config -down-> imageConfigStore: ImageStore
imageConfigStore -down-> image.store
image.store -down-> image.fs: fs
image.store -down-> layer.layerStore: lss map from os to layerStore

class ImageService

ImageService .down.>v2Puller: creates
ImageService .down.>DefaultService: RegistryService
ImageService .down.>LayerDownloadManager: downloadManager
ImageService .down.>metadata.FSMetadataStore: distributionMetadataStore
ImageService .down.>reference.store : ReferenceStore
ImageService .down.>image.store : ImageStore
ImageService .down.> layer.layerStore: LayerStores

@end