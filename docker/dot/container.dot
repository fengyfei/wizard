@startuml

package "container" {
	class Container
	class State {
		+ Running           bool
		+ Paused            bool
		+ Restarting        bool
		+ OOMKilled         bool
		+ RemovalInProgress bool
		+ Dead              bool
		+ Pid               int
	}
	class Health
	class attachContext {
		+ ctx    context.Context
		+ cancel context.CancelFunc
		+ mu     sync.Mutex
	}
}

class containertypes.Config
class layer.Store
class layer.RWLayer

Container -down-> containertypes.Config: Config
Container -down-> layer.Store: Driver Name
Container -down-> layer.RWLayer: RWLayer
layer.Store .right.> layer.RWLayer: CreateRWLayer

class exec.Store {
	+ byID map[string]*Config
	+ sync.RWMutex
}

class stream.Config

package "network" {
	class Settings {
		+ Bridge                 string
		+ SandboxID              string
		+ HairpinMode            bool
		+ LinkLocalIPv6Address   string
		+ LinkLocalIPv6PrefixLen int
		+ Networks               map[string]*EndpointSettings
		+ Service                *clustertypes.ServiceConfig
		+ Ports                  nat.PortMap
		+ SandboxKey             string
		+ SecondaryIPAddresses   []networktypes.Address
		+ SecondaryIPv6Addresses []networktypes.Address
		+ IsAnonymousEndpoint    bool
		+ HasSwarmEndpoint       bool
	}
}

Container -left-> State: State
State -left-> Health: Health
Container -right-> attachContext: attachContext
Container -down-> exec.Store: ExecCommands
Container -down-> stream.Config: StreamConfig
Container -down-> Settings: NetworkSettings

@end